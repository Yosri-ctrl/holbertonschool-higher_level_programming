chack if matrix_mul works proproly
>>> matrix_mul = __import__("100-matrix_mul").matrix_mul

>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
[[7, 10], [15, 22]]
>>> print(matrix_mul([[1, 0], [0, 1]], [[1, 1], [1, 1]]))
[[1, 1], [1, 1]]
>>> print(matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
[[13, 16]]
>>> print(matrix_mul([[1, 0], [0, 1]], [[1., 2.], [3., 4.]]))
[[1.0, 2.0], [3.0, 4.0]]
>>> print(matrix_mul([[1, 0], [0, 1]], [["1.", 2.], [3., 4.]]))
Traceback (most recent call last):
...
TypeError: m_b should contain only integers or floats
>>> print(matrix_mul([["1", 0], [0, 1]], [[1., 2.], [3., 4.]]))
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats
>>> print(matrix_mul(['1', [0, 1]], [[1., 2.], [3., 4.]]))
Traceback (most recent call last):
...
TypeError: m_a must be a list of lists
>>> print(matrix_mul([[1, 0], [0, 1]], ["1", [3., 4.]]))
Traceback (most recent call last):
...
TypeError: m_b must be a list of lists
>>> print(matrix_mul([[1, 0], [0, 1]], [[], [3., 4.]]))
Traceback (most recent call last):
...
ValueError: m_b can't be empty
>>> print(matrix_mul([[1, 0], []], [[1, 2], [3., 4.]]))
Traceback (most recent call last):
...
ValueError: m_a can't be empty
>>> print(matrix_mul([[1, 0], [0, 1]], [["1", 2], [3., 4.]]))
Traceback (most recent call last):
...
TypeError: m_b should contain only integers or floats
>>> print(matrix_mul([[1, 0], [0, "1"]], [[1, 2], [3., 4.]]))
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats
>>> print(matrix_mul([[1, 0], [0]], [[1, 2], [3., 4.]]))
Traceback (most recent call last):
...
TypeError: each row of m_a must be of the same size
>>> print(matrix_mul([[1, 0], [0, 1]], [[1], [3., 4.]]))
Traceback (most recent call last):
...
TypeError: each row of m_b must be of the same size
